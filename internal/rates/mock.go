// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/rates/handler.go

// Package rates is a generated GoMock package.
package rates

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRateServiceInterface is a mock of RateServiceInterface interface.
type MockRateServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRateServiceInterfaceMockRecorder
}

// MockRateServiceInterfaceMockRecorder is the mock recorder for MockRateServiceInterface.
type MockRateServiceInterfaceMockRecorder struct {
	mock *MockRateServiceInterface
}

// NewMockRateServiceInterface creates a new mock instance.
func NewMockRateServiceInterface(ctrl *gomock.Controller) *MockRateServiceInterface {
	mock := &MockRateServiceInterface{ctrl: ctrl}
	mock.recorder = &MockRateServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRateServiceInterface) EXPECT() *MockRateServiceInterfaceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockRateServiceInterface) Get() (*float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(*float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRateServiceInterfaceMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRateServiceInterface)(nil).Get))
}
