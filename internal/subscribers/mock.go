// Code generated by MockGen. DO NOT EDIT.
// Source: ./domains/subscribers/handler.go

// Package subscribers is a generated GoMock package.
package subscribers

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSubscriberServiceInterface is a mock of SubscriberServiceInterface interface.
type MockSubscriberServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSubscriberServiceInterfaceMockRecorder
}

// MockSubscriberServiceInterfaceMockRecorder is the mock recorder for MockSubscriberServiceInterface.
type MockSubscriberServiceInterfaceMockRecorder struct {
	mock *MockSubscriberServiceInterface
}

// NewMockSubscriberServiceInterface creates a new mock instance.
func NewMockSubscriberServiceInterface(ctrl *gomock.Controller) *MockSubscriberServiceInterface {
	mock := &MockSubscriberServiceInterface{ctrl: ctrl}
	mock.recorder = &MockSubscriberServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSubscriberServiceInterface) EXPECT() *MockSubscriberServiceInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSubscriberServiceInterface) Create(request *SubscriberRequest) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", request)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockSubscriberServiceInterfaceMockRecorder) Create(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSubscriberServiceInterface)(nil).Create), request)
}

// Search mocks base method.
func (m *MockSubscriberServiceInterface) Search(filter *SearchSubscribeRequest) (*SearchSubscribeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Search", filter)
	ret0, _ := ret[0].(*SearchSubscribeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Search indicates an expected call of Search.
func (mr *MockSubscriberServiceInterfaceMockRecorder) Search(filter interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Search", reflect.TypeOf((*MockSubscriberServiceInterface)(nil).Search), filter)
}
